@using FCStore.Models;

@model FCStore.Models.ProductEditDetailVM
@section css{
    @Styles.Render("~/xheditor/css")
    @Styles.Render("~/UploadFile/css")
}

@section scripts{
    @Scripts.Render("~/bundles/HighChart")
    @*@Scripts.Render("~/bundles/productDetail")*@
    @Scripts.Render("~/xheditor/js")
    @Scripts.Render("~/UploadFile/js")
    @Scripts.Render("~/Manager/js")
    
    <script type="text/javascript" >
        $(function () {
            var editer = $("<textarea></textarea>");
            var tmpStr = $("#productTitle").html();
            tmpStr = $.trim(tmpStr);
            $("#productTitle").html("");
            editer.appendTo($("#productTitle"));
            editer.val(tmpStr);

            editer = $("<input type='text' />");
            tmpStr = $("#productPrice .price").text();
            tmpStr = tmpStr.substr(1, tmpStr.length - 1);
            tmpStr = parseFloat(tmpStr);
            $("#productPrice .price").html("￥");
            editer.appendTo($("#productPrice .price"));
            editer.val(tmpStr);


            editer = $("<input type='text' />");
            tmpStr = $("#productPrice .marketPrice").text();
            tmpStr = tmpStr.substr(1, tmpStr.length - 1);
            tmpStr = parseFloat(tmpStr);
            $("#productPrice .marketPrice").html("￥");
            editer.appendTo($("#productPrice .marketPrice"));
            editer.val(tmpStr);

            editer = $("<input type='text' />");
            tmpStr = $("#productPrice .sale").text();
            tmpStr = parseInt(tmpStr);
            $("#productPrice .sale").html("");
            editer.appendTo($("#productPrice .sale"));
            editer.val(tmpStr);

            //$("#spec-list .editBtn").bind("click", ProductDetail.onImgEditBtnClick);

            editer = $("<textarea></textarea>");
            tmpStr = $("#descriptContent").html();
            $("#descriptContent").html("");
            editer.appendTo($("#descriptContent"));
            editer.val(tmpStr);
            editer.xheditor({
                upLinkUrl: "/upload.aspx",
                upLinkExt: "zip,rar,txt",
                upImgUrl: "/upload.aspx",
                upImgExt: "jpg,jpeg,gif,png",
                upFlashUrl: "/upload.aspx",
                upFlashExt: "swf",
                upMediaUrl: "/upload.aspx",
                upMediaExt: "avi"
            });

            $("#addimg_upload").uploadify({
                height: 17,
                width: 40,
                buttonText: '添加',
                auto: false,
                swf: '/Scripts/uploadify/uploadify.swf',
                uploader: '/Manager/Upload',
                fileTypeDesc: 'Image Files',
                fileTypeExts: '*.jpg;*.bmp;*.png;*.gif',
                onUploadSuccess: function (file, data, response) {
                    var obj = $.parseJSON(data);
                    if (obj.Success) {
                        $("#spec-list .ILUl")
                    }
                }
            });

            $.each($("#preview img"), function (i, n) {
                $("#img_upload" + i).uploadify({
                    height: 17,
                    width: 40,
                    buttonText: '替换',
                    auto: false,
                    swf: '/Scripts/uploadify/uploadify.swf',
                    uploader: '/Manager/Upload',
                    fileTypeDesc: 'Image Files',
                    fileTypeExts: '*.jpg;*.bmp;*.png;*.gif',
                    onUploadSuccess: function (file, data, response) {

                    }
                });
            });

            $("#productBrand .evaluate .star").bind("click", ProductManager.onStarClick);

            $("#gobackBtn").bind("click", ProductManager.onDetailBackBtnClick);
            $("#refreshBtn").bind("click", ProductManager.onDetailRefreshBtnClick);
            $("#saveBtn").bind("click", ProductManager.onDetailSaveBtnClick);
            $("#previewBtn").bind("click", ProductManager.onDetailPreviewBtnClick);

            $("#saleLog input").bind("change", function (ev) {
                $("#buildBtn").attr("class", "sbtn1");
            });

            $("#buildBtn").on("click",ProductManager.onBuildEvaluationBtnClick);
        });
    </script>
}

<div id="PD_View">
    <div id="categoryNav">
        <div>当前位置：</div>
        @{
            FCStore.Models.Category tmpCate = Model.Product.Category;
            int CID = -1;
            string htmlStr = "";
            while (CID != tmpCate.CID)
            {
                htmlStr = "<div><a href=\"/Product/ListByCategory/" + tmpCate.CID + "\">" + tmpCate.NameStr + "</a></div><div>></div>" + htmlStr;
                CID = tmpCate.CID;
                tmpCate = tmpCate.Parent;
            }
            IHtmlString html = new HtmlString(htmlStr);
            @html
        }
        <div>商品详情</div>
    </div>
    <div class="top">
        <div id="preview">
            <ul class="ILUl">
                @{
                    int imgIndex = 0;
                    foreach (string tmpSrc in Model.Product.ImgPathArr)
                    {
                        <li class="listLi">
                            <img src="@(tmpSrc)" jqimg="@(tmpSrc)" />
                            <div id="img_upload@(imgIndex++)"></div>
                            <div class="delBtn">X</div>
                        </li>
                    }
                }
                <li class="listLi">
                    <img />
                    <div id="addimg_upload"></div>
                </li>
            </ul>
        </div>
        <div id="productInfo">
            <div id="productTitle">
                @(Model.Product.Title)
            </div>
            <div id="productBrand">
                <div>
                    <div class="title">
                        编号：
                    </div>
                    <div class="content" id="PIDLB">@(Model.Product.PID)</div>
                </div>
                <div class="evaluate">
                    @for (int i = 0; i < 5; i++)
                    {
                        <div class="star empty"></div>
                    }
                </div>
                <div class="brandDiv">
                    <div class="title">
                        品牌：
                    </div>
                    <div class="content">
                        <a class="brandA" href="~/Manager/BrandsManager/1/@(Model.Product.PID)">
                            <div class="icon">
                                @*<img src="/Brand/@(Model.Product.Brand.Tag).jpg" alt="@(Model.Product.Brand.Name2)" />*@
                                @(Model.Product.Brand.NameStr)
                            </div>
                        </a>
                    </div>
                </div>
                <div class="pullupDiv"></div>
            </div>
            <div id="productPrice">
                <div class="title">代购价：</div>
                <div class="content price">￥@(Model.Product.Price)</div>
                <div class="title">市场价：</div>
                <div class="content marketPrice">￥@(Model.Product.MarketPrice)</div>
                <div class="title">已售出：</div>
                <div class="content sale">@(Model.Product.Sale)</div>
                <div class="pullupDiv"></div>
                <div class="conner"></div>
            </div>
            <div id="productChoose">
                @{
                    if (!string.IsNullOrEmpty(Model.Product.Chose))
                    {
                        try
                        {
                            Newtonsoft.Json.Linq.JArray jArr = Newtonsoft.Json.Linq.JArray.Parse(Server.HtmlDecode(Model.Product.Chose));
                            foreach (Newtonsoft.Json.Linq.JObject item in jArr)
                            {
                                <div class="choseItemPar">
                                    <div class="title"> @(item["title"])：</div>
                                    <div class="content">
                                        @{
                                bool tag = true;
                                foreach (Newtonsoft.Json.Linq.JObject vItem in (Newtonsoft.Json.Linq.JArray)item["values"])
                                {
                                                <span class="choseItem cValue @(tag ? "sel" : "")">@(vItem["name"])</span>
                                    tag = false;
                                }
                                        }
                                        <div class="pullupDiv"></div>
                                    </div>
                                </div>
                            }
                        }
                        catch
                        { }
                    }
                    <textarea>@(Server.HtmlDecode(Model.Product.Chose.Trim()))</textarea>
                    <label>语法提示：[{"title":"容量", "values":[{"name":"200ml"}]}]</label>
                }
            </div>
            <div class="pullupDiv"></div>
        </div>
        <div class="pullupDiv"></div>
    </div>
    <div id="productTabs" style="background-color:white;">
        <ul>
            <li><a href="#descriptContent">商品详情</a></li>
        </ul>
        <div id="descriptContent">
            @{
                html = new HtmlString(Model.Product.Descript);
                @html
            }
        </div>
        <ul>
            <li><a href="#saleLog">销售记录(@(ViewBag.SaleCount))</a></li>
        </ul>
        <div id="saleLog">
            <ul>
                @for (int i = 0; i < Model.SaleLog.CountArr.Count; i++)
                {
                    <li class="title">@(Model.SaleLog.DTStrArr[i])</li>
                    <li class="content" data-bdt="@(Model.SaleLog.BDTStrArr[i])" data-edt="@(Model.SaleLog.EDTStrArr[i])">
                        <input type="text" data-val="@(Model.SaleLog.CountArr[i] + Model.SaleLog.ShamCountArr[i])" value="@(Model.SaleLog.CountArr[i] + Model.SaleLog.ShamCountArr[i])" />
                    </li>
                }
            </ul>
            <div class="btnDiv">
                <input id="buildBtn" class="sbtngray" type="button" value="生成" />
            </div>
        </div>
        <ul>
            <li><a href="#evaluation">客户评价(@(ViewBag.EvaluationCount))</a></li>
        </ul>
        <div id="buildDiv">
        </div>
        <div id="evaluation">
            @foreach (EvaluationVM evaluation in Model.EvaluationLST)
            {
                <div class="item" data-issham="@(evaluation.IsSham ? 1 : 0)" >
				    <div class="headDiv"><img class="headImg" /></div>
				    <div class="starDiv">
					    <div class="unDiv">@(evaluation.IDLabel)：</div>
                        <div class="starArea"></div>
                    </div>
                    <div class="lbDiv">
				        <div class="description">@(evaluation.Description)</div>
                    </div>
                    <div class="dataDiv">@(evaluation.DataTime)</div>
                    <div class="pullupDiv"></div>
                    <div class="editDiv">
                        @if (evaluation.IsSham)
                        {
                            <input class="delBtn sbtn2" type="button" value="删除" />
                        }
                        else
                        {
                            <label><input class="showCB" type="checkbox" checked="@(evaluation.IsShow ? "true" : "false")" />是否显示</label>
                        }
                        <input class="editBtn sbtn1" type="button" value="编辑" />
                    </div>
			    </div>
            }
        </div>
        <div id="btnDiv" class="p1 pullupDiv">
            <ul>
                <li class="p4">
                    <input id="gobackBtn" class="sbtn1" type="button" value="返回" />
                </li>
                <li class="p4">
                    <input id="refreshBtn" class="sbtn2" type="button" value="刷新" />
                </li>
                <li class="p4">
                    <input id="saveBtn" class="sbtn3" type="button" value="保存" />
                </li>
                <li class="p4">
                    <input id="previewBtn" class="sbtn1" type="button" value="预览" />
                </li>
            </ul>
        </div>
    </div>
</div>
